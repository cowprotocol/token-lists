name: OptimizeImage

# Input: chain, address, CID
# Steps:
# - resolve image/download it
# - optimize image: 256x256, remove metadata
# - upload new image to ipfs: name file <address>.png, upload it
# - return CID

on:
  workflow_call:
    inputs:
#      address:
#        required: true
#        type: string
      imageUrl:
        required: true
        type: string
    outputs:
      imageBody:
        value: $${{ jobs.process.outputs.imageBody }}
#      imageCid:
#        value: ${{ jobs.upload.outputs.cid }}
      imageBin:
        value: ${{ jobs.optimize.outputs.imageBin }}

jobs:
  optimize:
    runs-on: ubuntu-latest
    steps:
      - name: Download image
#        run: "curl -o image.png https://gateway.pinata.cloud/ipfs/${{ inputs.imageCid }}"
        run: "curl -o image.png ${{ inputs.imageUrl }}"

      - name: Optimize image
        uses: jruipinto/ImageMagick-action@v1
        with:
          # ImageMagick command to be executed
          command: "convert image.png -depth 7 -resize 256x -posterize 24 output.png"
#      - name: Optimize image
#        run: "convert image.png -depth 7 -resize 256x -posterize 24 output.png"

#      - name: Further compress image
#        run: "??? still need to figure out how to do this without imageoptim"

      - name: Output optimized image
        run: echo "imageBin=\"$(base64 -i output.png)\"" >> $GITHUB_OUTPUT